{"version":3,"sources":["store/store.jsx","assets/styles/theme.js","components/dumb/Number.jsx","helpers/puzzle.js","components/dumb/GamePlay.jsx","components/dumb/Game.jsx","helpers/commonUtility.js","components/App.jsx","serviceWorker.js","index.js"],"names":["CommonContext","React","createContext","CommonInitialState","matrix","load","actionTypes","CommonReducer","state","action","type","Provider","context","reducer","initialState","children","Context","useReducer","dispatch","window","log","value","CommonContextProvider","theme","createMuiTheme","palette","primary","main","secondary","colors","blue","green","red","yellow","orange","indigo","typography","useNextVariants","fontFamily","fontSize","useStyles","makeStyles","position","alignItems","justifyContent","display","margin","width","height","transparent","opacity","square","maxWidth","maxHeight","transition","transitions","create","backgroundColor","borderColor","boxShadow","fade","noselect","MozUserSelect","WebkitUserSelect","MoUserSelect","UserSelect","Number","number","classes","useMemo","console","Card","key","id","className","classnames","Typography","variant","getItemsArray","size","Array","fill","map","x","i","c","r","rc","item","xy","shuffle","array","JSON","parse","stringify","m","length","t","Math","floor","random","card","top","bottom","right","left","GamePlay","level","totalCount","useState","puzzleLib","setState","onShuffle","useCallback","shuffledArr","sort","a","b","useTransition","native","unique","from","transform","enter","update","leave","config","mass","tension","friction","trail","onRest","Grid","container","direction","justify","style","props","div","onClick","retArray","sourceId","findIndex","zeroId","parseInt","card1","padding","typo","textAlign","color","slider","LevelSelect","levelRef","setSize","onChange","e","current","Slider","step","marks","min","max","PlayButton","onPlayClick","play","setPlay","startProps","useSpring","stiff","to","mainRoutes","path","component","useRef","setLoad","Container","exact","message","data","isDebugMode","sessionStorage","getItem","localStorage","withRouter","route","Comp","Boolean","location","hostname","match","ReactDOM","render","StrictMode","basename","process","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.05dac5d1.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\n\nconst CommonContext = React.createContext();\n\n/* -------------------------------------------------------------------------------------------------------------------------------------------------\n ###--STATE--###\n -------------------------------------------------------------------------------------------------------------------------------------------------*/\n// STATE - This defines the type of data maintained in the Redux store.\nconst CommonInitialState = {\n\tmatrix: [],\n\tload: false,\n};\n\n/* -------------------------------------------------------------------------------------------------------------------------------------------------\n ###--ACTIONS--###\n -------------------------------------------------------------------------------------------------------------------------------------------------*/\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\n// They do not themselves have any side-effects; they just describe something that is going to happen.\nconst actionTypes = {\n\tLOAD_MATRIX: \"LOAD_MATRIX\",\n};\n\n/* -------------------------------------------------------------------------------------------------------------------------------------------------\n ###--ACTION CREATORS--###\n -------------------------------------------------------------------------------------------------------------------------------------------------*/\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\nconst commonActions = {\n\tloadMatrix: (dispatch, matrix) => dispatch({ type: actionTypes.LOAD_MATRIX, matrix }),\n};\n\n/* -------------------------------------------------------------------------------------------------------------------------------------------------\n ###--REDUCERS--###\n -------------------------------------------------------------------------------------------------------------------------------------------------*/\n// REDUCERS - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\n// Switch can also be used here\nconst CommonReducer = (state, action) => {\n\tif (action.type === actionTypes.LOAD_MATRIX) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tmatrix: action.matrix,\n\t\t\tload: true,\n\t\t};\n\t}\n\n\treturn state;\n};\n\n/* -------------------------------------------------------------------------------------------------------------------------------------------------\n ###--PROVIDER--###\n -------------------------------------------------------------------------------------------------------------------------------------------------*/\n// PROVIDER - Provider is context provided to children. This is basically state and dispatch passed to children.\n// Only used in TOP parent function\nconst Provider = ({ context, reducer, initialState, children }) => {\n\tconst Context = context;\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\twindow.log(\"Provider...\", state);\n\treturn <Context.Provider value={{ state, dispatch }}>{children}</Context.Provider>;\n};\n\n// EXPORTS for multiple context providers\nexport const CommonContextProvider = ({ children }) => {\n\treturn (\n\t\t<Provider context={CommonContext} reducer={CommonReducer} initialState={CommonInitialState}>\n\t\t\t{children}\n\t\t</Provider>\n\t);\n};\n\nexport const COMMON_STORE = {\n\tactions: commonActions,\n\tcontext: CommonContext,\n};\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { blue, green, red, yellow, orange, indigo } from \"@material-ui/core/colors\";\n\nexport const theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: \"#9796f0\",\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: \"#fbc7d4\",\n\t\t},\n\t\ttype: \"light\",\n\t},\n\tcolors: {\n\t\tblue: blue,\n\t\tgreen: green,\n\t\tred: red,\n\t\tyellow: yellow,\n\t\torange: orange,\n\t\tindigo: indigo,\n\t},\n\ttypography: {\n\t\tuseNextVariants: true,\n\t\tfontFamily: \"'Rajdhani', sans-serif\",\n\t\tfontSize: 14,\n\t},\n});\n","import React, { useMemo } from \"react\";\nimport { Card, Typography } from \"@material-ui/core\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport classnames from \"classnames\";\nimport { theme } from \"../../assets/styles/theme\";\n\nconst useStyles = makeStyles({\n\ttypography: {\n\t\tposition: \"absolute\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tdisplay: \"flex\",\n\t\tmargin: 2,\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\ttransparent: {\n\t\topacity: 0,\n\t},\n\tsquare: {\n\t\tmaxWidth: 56,\n\t\tmaxHeight: 56,\n\t\ttransition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n\t\t\"&:hover\": {\n\t\t\tbackgroundColor: theme.colors.blue[300],\n\t\t\tborderColor: theme.colors.indigo[500],\n\t\t},\n\t\t\"&.Mui-focused\": {\n\t\t\tboxShadow: `${fade(theme.colors.blue[400], 0.25)} 0 0 0 3px`,\n\t\t\tborderColor: theme.colors.blue[500],\n\t\t\tbackgroundColor: theme.colors.blue[200],\n\t\t},\n\t},\n\tnoselect: {\n\t\tMozUserSelect: \"none\",\n\t\tWebkitUserSelect: \"none\",\n\t\tMoUserSelect: \"none\",\n\t\tUserSelect: \"none\",\n\t},\n});\n\nexport const Number = ({ number }) => {\n\tconst classes = useStyles();\n\tconst comp = useMemo(() => {\n\t\tconsole.log(`NUMBER: rendering number`);\n\t\treturn (\n\t\t\t<Card\n\t\t\t\tkey={number}\n\t\t\t\tid={number}\n\t\t\t\tclassName={classnames(classes.typography, classes.square, {\n\t\t\t\t\t[classes.transparent]: !number,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h4\" className={classes.noselect}>\n\t\t\t\t\t{number}\n\t\t\t\t</Typography>\n\t\t\t</Card>\n\t\t);\n\t}, []);\n\n\treturn comp;\n};\n","export const getItemsArray = (size = 9) => {\n\treturn Array(size * size)\n\t\t.fill(0)\n\t\t.map((x, i) => {\n\t\t\tconst c = i % size;\n\t\t\tconst r = (i - c) / size;\n\t\t\treturn (x = {\n\t\t\t\tid: i,\n\t\t\t\trc: [r + 1, c + 1],\n\t\t\t\titem: i !== size * size - 1 ? i + 1 : 0,\n\t\t\t\txy: [c * 60, r * 60],\n\t\t\t});\n\t\t});\n};\n\nexport const isAdjecent = (id, matrix) => {\n\tconsole.log(`PUZZLE: checking adjecent for ${id}`);\n\tconst selected = matrix.find((m) => m.item === parseInt(id));\n\tconst zero = matrix.find((m) => m.item === 0);\n\n\tconst rc = selected && selected.rc;\n\t// Check if 4 square have 0 value\n\n\treturn false;\n};\n\n/**\n * https://bost.ocks.org/mike/shuffle/\n */\nexport function shuffle(size, matrix) {\n\tlet array = JSON.parse(JSON.stringify(matrix));\n\tlet m = array.length;\n\tlet t = null;\n\tlet i;\n\t// While there remain elements to shuffle…\n\twhile (m) {\n\t\t// Pick a remaining element…\n\t\ti = Math.floor(Math.random() * m--);\n\t\t// And swap it with the current element.\n\t\tt = array[m];\n\t\tarray[m] = array[i];\n\t\tarray[i] = t;\n\t}\n\n\t// adjust xy position and rc position\n\tarray.map((x, i) => {\n\t\tconst c = i % size;\n\t\tconst r = (i - c) / size;\n\t\tx.id = i;\n\t\tx.rc = [r + 1, c + 1];\n\t\tx.xy = [c * 60, r * 60];\n\t});\n\n\treturn array;\n}\n\nexport function swapWithZero(array, item) {\n\tconst sourceId = array.findIndex((x) => x.item === item);\n\tconst zeroId = array.findIndex((x) => x.item === 0);\n\n\t// swapped objects\n\tlet t = array[sourceId];\n\tarray[sourceId] = array[zeroId];\n\tarray[zeroId] = t;\n\tarray.map((x, i) => {\n\t\tconst c = i % 3;\n\t\tconst r = (i - c) / 3;\n\t\tx.id = i;\n\t\tx.rc = [r + 1, c + 1];\n\t\tx.xy = [c * 60, r * 60];\n\t});\n\treturn array;\n}\n\nexport const getNumberMatrix = (size = 9, isRandom = false) => {\n\tlet numArr = getItemsArray(size);\n\tif (isRandom) numArr = shuffle(numArr);\n\tlet n = 0;\n\tlet arr = Array(size)\n\t\t.fill(0)\n\t\t.map((_, i) =>\n\t\t\tArray(size)\n\t\t\t\t.fill(0)\n\t\t\t\t.map((num, j) => (num = numArr[n++]))\n\t\t);\n\treturn arr;\n};\n","import React, { useState, useMemo, useCallback, useEffect, useRef } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { theme } from \"../../assets/styles/theme\";\nimport { animated, useSpring, useTransition, useChain, config, useSprings } from \"react-spring\";\nimport { Number } from \"./Number\";\nimport * as puzzleLib from \"../../helpers/puzzle\";\n\nconst useStyles = makeStyles({\n\tcard: {\n\t\tposition: \"absolute\",\n\t\twidth: 540,\n\t\theight: 540,\n\t\ttop: 0,\n\t\tbottom: 0,\n\t\tright: 0,\n\t\tleft: 0,\n\t\tmargin: \"auto\",\n\t},\n});\n\nexport const GamePlay = ({ level }) => {\n\tconst classes = useStyles();\n\tconst size = level + 2;\n\tconst totalCount = size * size;\n\n\tconst [state, setState] = useState({\n\t\tmatrix: puzzleLib.getItemsArray(size),\n\t\tload: false,\n\t});\n\n\tfunction onClick(id) {\n\t\tconst retArray = puzzleLib.swapWithZero(state.matrix, parseInt(id));\n\n\t\tsetState({\n\t\t\tmatrix: retArray,\n\t\t\t...state,\n\t\t});\n\t\tconsole.log(`GAMEPLAY: swaping`, id, retArray);\n\t}\n\n\tconst onShuffle = useCallback(() => {\n\t\tconst shuffledArr = puzzleLib.shuffle(size, state.matrix);\n\t\tconsole.log(`GAMEPLAY: Shuffled`, shuffledArr);\n\t\tsetState({\n\t\t\tmatrix: shuffledArr.sort((a, b) => a.id - b.id),\n\t\t\tload: true,\n\t\t});\n\t}, []);\n\n\tconst transitions = useTransition(state.matrix, (item) => item.item, {\n\t\tnative: true,\n\t\tunique: true,\n\t\tfrom: ({ xy }) => ({\n\t\t\ttransform: `translate3d(${xy[0]}px, ${xy[1]}px, 0) scale(0)`,\n\t\t\twidth: 60,\n\t\t\theight: 60,\n\t\t}),\n\t\tenter: ({ xy }) => ({ transform: `translate3d(${xy[0]}, ${xy[1]}, 0) scale(1)` }),\n\t\tupdate: ({ xy }) => ({ transform: `translate3d(${xy[0]}px, ${xy[1]}px, 0) scale(1)` }),\n\t\tleave: { opacity: 0 },\n\t\tconfig: { mass: 1, tension: 200, friction: 10 },\n\t\ttrail: !state.load ? size * size : 100,\n\t\tonRest: ({ id }) => {\n\t\t\t// shuffle after finishing animation on last item\n\t\t\t// last id is 1 less total count\n\t\t\tif (!state.load && id === totalCount - 1) {\n\t\t\t\tconsole.log(`GAMEPLAY: shuffling grid`);\n\t\t\t\tonShuffle();\n\t\t\t}\n\t\t},\n\t});\n\n\t/**\n\t * Number component should render just once.\n\t * Animations will be updated on matrix update\n\t */\n\tconst render = useMemo(() => {\n\t\tconsole.log(`GAMEPLAY: rendering gameplay`, state.matrix);\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\tkey=\"grid\"\n\t\t\t\tid=\"grid\"\n\t\t\t\tcontainer\n\t\t\t\tdirection=\"row\"\n\t\t\t\tjustify=\"space-between\"\n\t\t\t\talignItems=\"flex-start\"\n\t\t\t\tclassName={classes.card}\n\t\t\t\tstyle={{ width: size * 60, height: size * 60 }}\n\t\t\t>\n\t\t\t\t{state.matrix.map((m, i) => {\n\t\t\t\t\tconst { item, props, key } = transitions[i];\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<animated.div\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tid={key}\n\t\t\t\t\t\t\tstyle={{ position: \"absolute\", ...props }}\n\t\t\t\t\t\t\tonClick={() => onClick(key)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Number number={item.item} />\n\t\t\t\t\t\t</animated.div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Grid>\n\t\t);\n\t}, [state.matrix]);\n\n\t// #endregion\n\treturn render;\n};\n","import React, { useMemo, useCallback, useState, useRef } from \"react\";\nimport { Container, Typography, Slider } from \"@material-ui/core\";\nimport { GamePlay } from \"./GamePlay\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { theme } from \"../../assets/styles/theme\";\nimport classnames from \"classnames\";\nimport { animated, useSpring, config } from \"react-spring\";\n\nconst useStyles = makeStyles({\n\tcard1: {\n\t\tposition: \"relative\",\n\t\twidth: 200,\n\t\ttop: 120,\n\t\tmargin: \"auto\",\n\t\tpadding: 10,\n\t},\n\ttypo: {\n\t\tmargin: 10,\n\t\ttextAlign: \"center\",\n\t\tcolor: theme.colors.orange[400],\n\t},\n\tslider: {\n\t\tcolor: theme.colors.orange[400],\n\t},\n\tcard: {\n\t\tposition: \"absolute\",\n\t\tmargin: \"auto\",\n\t\ttop: 0,\n\t\tbottom: 0,\n\t\tright: 0,\n\t\tleft: 0,\n\t},\n\ttypography: {\n\t\tposition: \"absolute\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tdisplay: \"flex\",\n\t\tmargin: 2,\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\tnoselect: {\n\t\tMozUserSelect: \"none\",\n\t\tWebkitUserSelect: \"none\",\n\t\tMoUserSelect: \"none\",\n\t\tUserSelect: \"none\",\n\t},\n});\n\nexport const Game = () => {\n\tconst levelRef = useRef({ size: 1 });\n\tconst [load, setLoad] = useState(false);\n\n\tconst render = useMemo(() => {\n\t\tconsole.log(`GAME: rendering main component`);\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t{!load && <LevelSelect levelRef={levelRef}></LevelSelect>}\n\t\t\t\t{!load && <PlayButton onPlayClick={() => setLoad(true)}></PlayButton>}\n\t\t\t\t{load && <GamePlay level={levelRef.current.size}></GamePlay>}\n\t\t\t</Container>\n\t\t);\n\t}, [load]);\n\n\treturn render;\n};\n\nconst LevelSelect = ({ levelRef }) => {\n\tconst classes = useStyles();\n\tconst [size, setSize] = useState(1);\n\n\tconst onChange = useCallback((e, value) => {\n\t\tsetSize(value);\n\t\tlevelRef.current.size = value;\n\t}, []);\n\n\treturn useMemo(() => {\n\t\tconsole.log(`GAME: rendering card 1`);\n\t\treturn (\n\t\t\t<div className={classes.card1}>\n\t\t\t\t<Typography variant=\"h4\" className={classes.typo}>\n\t\t\t\t\t{`Level ${size}`}\n\t\t\t\t</Typography>\n\t\t\t\t<Slider\n\t\t\t\t\tclassName={classes.slider}\n\t\t\t\t\tstep={1}\n\t\t\t\t\tmarks\n\t\t\t\t\tmin={1}\n\t\t\t\t\tmax={10}\n\t\t\t\t\tvalue={size}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}, [classes, onChange, size]);\n};\n\nconst PlayButton = ({ onPlayClick }) => {\n\tconst classes = useStyles();\n\tconst [play, setPlay] = useState(false);\n\n\tconst startProps = useSpring({\n\t\tconfig: config.stiff,\n\t\tfrom: { width: 0, height: 0, backgroundColor: theme.colors.orange[400], opacity: 1 },\n\t\tto: {\n\t\t\twidth: play ? 500 : 200,\n\t\t\theight: play ? 500 : 80,\n\t\t\topacity: play ? 0 : 1,\n\t\t},\n\t\tonRest: () => play && onPlayClick(),\n\t});\n\n\tconst renderPlayButton = useMemo(() => {\n\t\tconsole.log(`GAME: rendering play button`);\n\t\treturn (\n\t\t\t<animated.div\n\t\t\t\tclassName={classes.card}\n\t\t\t\tstyle={{ ...startProps }}\n\t\t\t\tonClick={() => setPlay(true)}\n\t\t\t>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h4\"\n\t\t\t\t\tclassName={classnames(classes.typography, classes.noselect)}\n\t\t\t\t>\n\t\t\t\t\t\"PLAY !!\"\n\t\t\t\t</Typography>\n\t\t\t</animated.div>\n\t\t);\n\t}, []);\n\n\treturn renderPlayButton;\n};\n","import { green, yellow, red, blue } from \"@material-ui/core/colors\";\nimport { Game } from \"../components/dumb/Game\";\n\n/*const UID = require(\"react-native-uuid\");\nconst electron = require(\"electron\").remote;\nconst { BrowserWindow } = electron;*/\n\n// Main Routes array\n// Misc routes (not related to dashboard) can go here\nexport const mainRoutes = [{ path: \"/\", component: Game, exact: true }];\n\n// ------------DEBUG MECHANISM-------------------------------------------//\n\nwindow.log = function (message, data) {\n\tlog(message, data);\n};\nconst isDebugMode = sessionStorage.getItem(\"GODEBUG\") || localStorage.getItem(\"GODEBUG\");\nfunction log(message, data) {\n\tif (!isDebugMode) return;\n\tconsole.log(`...${message}`, data || \"\");\n}\n\n// ----------------------------------------------------------------------//\n\nexport const NewWindow = ({\n\twidth = 500,\n\theight = 500,\n\tframe = false,\n\tshow = true,\n\tURL,\n\tdebug = false,\n\toptional,\n}) => {\n\t//var win = new BrowserWindow({ width, height, frame, ...optional });\n\tlet win;\n\twin.on(\"closed\", () => {\n\t\twin = null;\n\t});\n\n\tURL && win.loadURL(URL);\n\tshow && win.show();\n\tdebug && win.webContents.openDevTools();\n\n\treturn win;\n};\n\nexport function getRandomQuote() {\n\tconst quotes = [\n\t\t\"The intensity of your experience is more important than immensity of your possessions.\",\n\t\t\"“Play to win, NOT to avoid loosing.”\",\n\t\t\"“The mind, once stretched by a new idea, never regains its original dimensions.”\",\n\t];\n\treturn quotes[getRandomInt(quotes.length)];\n}\n\nfunction getRandomColor() {\n\tconst colors = [green, yellow, red, blue];\n\treturn colors[getRandomInt(colors.length)];\n}\n\nfunction getRandomInt(max) {\n\tconst index = Math.floor(Math.random() * Math.floor(max));\n\treturn index;\n}\n","import React, { useState } from \"react\";\nimport { ReactDOM } from \"react-dom\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport { CommonContextProvider } from \"../store/store\";\nimport { mainRoutes, NewWindow } from \"../helpers/commonUtility\";\n\nconst DesktopVersion = () => {\n\tconst window = NewWindow({ debug: false, frame: true });\n\t// var webC = window.webContents;\n\t// console.log(webC);\n\t// var document = webC.document;\n\tconst el = document.createElement(\"div\");\n\treturn null; // ReactDOM.createPortal(<NextNote />, el);\n};\n\nconst App = () => {\n\t// This will iterate routes to be rendered\n\tfunction renderRoutes() {\n\t\treturn mainRoutes.map((route) => {\n\t\t\tconst Comp = route.component;\n\t\t\treturn (\n\t\t\t\t<Route key={route.path} path={route.path} exact={!!route.exact} component={Comp} />\n\t\t\t);\n\t\t});\n\t}\n\n\treturn (\n\t\t<CommonContextProvider>\n\t\t\t<Switch>{renderRoutes()}</Switch>\n\t\t</CommonContextProvider>\n\t);\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { theme } from \"./assets/styles/theme\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<App />\n\t\t\t</ThemeProvider>\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}